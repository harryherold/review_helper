name: Deploy

on:
    push:
        tags:
            - "v[0-9]+.[0-9]+"

jobs:
    build-and-upload:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - build: linux
                      os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                    - build: macos
                      os: macos-latest
                      target: x86_64-apple-darwin
                    - build: windows
                      os: windows-latest
                      target: x86_64-pc-windows-msvc
        steps:
            - name: Clone repository
              uses: actions/checkout@v4
            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                targets: ${{ matrix.target }}
            - name: Get the release version from the tag
              shell: bash
              run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            - name: Build
              uses: actions-rs/cargo@v1
              with:
                use-cross: true
                command: build
                args: --verbose --release --target ${{ matrix.target }}
            - name: Build archive
              shell: bash
              run: |
                # Replace with the name of your binary
                binary_name="review_todo"

                dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
                mkdir "$dirname"
                if [ "${{ matrix.os }}" = "windows-latest" ]; then
                    mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
                else
                    mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
                fi

                if [ "${{ matrix.os }}" = "windows-latest" ]; then
                    7z a "$dirname.zip" "$dirname"
                    echo "ASSET=$dirname.zip" >> $GITHUB_ENV
                else
                    tar -czf "$dirname.tar.gz" "$dirname"
                    echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
                fi
            - name: Upload the binaries
              uses: softprops/action-gh-release@v1
              with:
                files: |
                    ${{ env.ASSET }}
