import { VerticalBox, LineEdit, ListView, HorizontalBox, Button, Palette } from "std-widgets.slint";

import { Style } from "style.slint";
import { FilePickerAdapter } from "globals.slint";
import { Popup } from "popup.slint";

export component FilePicker inherits Popup {
    callback accepted(string);
    in-out property <string> selected_file: "";

    title: "File Picker";

    VerticalBox {
        LineEdit {
            placeholder-text: "filter file";
            enabled: FilePickerAdapter.files_model.length > 0;
            edited(text) => {
                FilePickerAdapter.set-filter(text)
            }
        }

        ListView {
            for file in FilePickerAdapter.files_model: Rectangle {
                states [
                    is_selected_file when file == root.selected_file: {
                        background: Style.palette.selected;
                    }
                ]
                height: Style.size.control_height;
                width: parent.width;
                HorizontalLayout {
                    alignment: start;
                    Image {
                        source: @image-url("../assets/icons/file_picker.svg");
                        colorize: Palette.foreground;
                    }

                    Rectangle {
                        width: Style.size.spacing * 2;
                    }

                    Text {
                        vertical-alignment: center;
                        text: file;
                    }
                }

                ta := TouchArea {
                    clicked => {
                        root.selected_file = file;
                    }
                }
            }
        }

        HorizontalLayout {
            spacing: Style.size.big_spacing;
            alignment: end;
            Button {
                text: "Cancel";
                width: Style.size.control_width;
                clicked => {
                    root.close();
                }
            }

            Button {
                width: Style.size.control_width;
                text: "Take";
                enabled: root.selected_file != "";
                clicked => {
                    root.accepted(selected_file)
                }
            }
        }
    }
}
