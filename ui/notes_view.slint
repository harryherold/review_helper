import { GroupBox, LineEdit, Button, ListView, CheckBox, ComboBox, VerticalBox } from "std-widgets.slint";

import { Style } from "style.slint";
import { Repository, Notes, FilePickerAdapter } from "globals.slint";
import { FilePicker } from "file_picker.slint";

component HeaderColumn inherits Rectangle {
    in property <string> column_name;

    background: ta.has-hover ? Colors.black : Style.foreground_color;
    height: Style.control_height;

    Text {
        width: root.width;
        horizontal-alignment: center;
        vertical-alignment: center;
        overflow: elide;
        text: root.column_name;
    }

    ta := TouchArea { }
}

export component NotesView inherits Rectangle {
    private property <int> editingId: -1;
    file-picker := FilePicker {
        property <int> currentNoteId: -1;
        initial_x: 0;
        initial_y: 0;
        preferred-height: 300px;
        preferred-width: 300px;
        accepted(new_context) => {
            if (self.currentNoteId > -1) {
                Notes.change-context(self.currentNoteId, new-context);
            }
            self.close();
        }
        closed => {
            self.currentNoteId = -1;
            self.selected_file = "";
        }
    }

    VerticalBox {

        spacing: Style.spacing;

        HorizontalLayout {
            spacing: Style.spacing;

            Rectangle {
                width: 20px;
                background: Style.foreground_color;
            }

            HeaderColumn {
                column_name: "Text";
                width: 600px;
            }

            HeaderColumn {
                column_name: "Context";
            }
        }

        listview := ListView {
            padding-right: 0;
            padding-left: 0;

            for note[idx] in Notes.notes_model: HorizontalLayout {
                spacing: Style.spacing;
                padding-top: Style.spacing;

                CheckBox {
                    width: 20px;
                    checked: note.is_fixed;
                    toggled => {
                        Notes.toggle-fixed(note.id);
                    }
                }

                text-input := LineEdit {
                    property <string> note_text: note.text;

                    changed note_text => {
                        self.text = note_text;
                    }

                    width: 600px;
                    text: note.text;
                    accepted(text) => {
                        Notes.change-text(note.id, text);
                    }
                }

                Rectangle {
                    background: Style.input_background_color;
                    border-radius: 2px;
                    border-color: Style.popup_border_color;
                    border-width: Style.border_width;

                    HorizontalLayout {
                        context-edit := LineEdit {
                            horizontal-alignment: left;
                            text: note.context;
                            accepted(text) => {
                                Notes.change-context(note.id, text);
                            }
                        }

                        file-picker-button := Rectangle {
                            width: 30px;
                            background: edit-ta.pressed || root.editingId == note.id ? Colors.black : Style.popup_border_color;
                            border-radius: 2px;
                            border-color: Style.popup_border_color;
                            border-width: Style.border_width;
                            Image {
                                vertical-alignment: center;
                                horizontal-alignment: center;
                                width: 20px;
                                height: self.width;
                                source: @image-url("../assets/icons/file_picker.svg");
                            }

                            edit-ta := TouchArea {
                                clicked => {
                                    file-picker.currentNoteId = note.id;
                                    if (FilePickerAdapter.contains-model-context(note.context)) {
                                        file-picker.selected_file = note.context;
                                    }
                                    file-picker.initial_x = root.width - file-picker.width;
                                    file-picker.initial_y = listview.y + idx * text-input.height + idx * Style.spacing + file-picker-button.height;
                                    file-picker.open();
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
