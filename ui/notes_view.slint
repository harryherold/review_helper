import { GroupBox, LineEdit, Button, ListView, CheckBox, ComboBox, VerticalBox } from "std-widgets.slint";
import { Style } from "style.slint";

export struct NoteItem  {
    id: int,
    text: string,
    is_fixed: bool,
    context: string,
}

export global Notes {
    in property <[NoteItem]> notes_model;
    callback add-note(string, string);
    callback change-text(int, string);
    callback toggle-fixed(int);
    callback delete-note(int);
    pure callback file-notes-model(string) -> [NoteItem];
}

component HeaderColumn inherits Rectangle {
    in property <string> column_name;

    background: ta.has-hover ? Colors.black : Style.foreground_color;
    height: Style.control_height;

    Text {
        width: root.width;
        horizontal-alignment: center;
        vertical-alignment: center;
        overflow: elide;
        text: root.column_name;
    }
    ta := TouchArea {}
}

export component NotesView inherits VerticalBox {
    spacing: Style.spacing;

    HorizontalLayout {
        spacing: Style.spacing;

        Rectangle {
            width: 20px;
            background: Style.foreground_color;
        }
        HeaderColumn {
            column_name: "Text";
            width: 600px;
        }
        HeaderColumn {
            column_name: "Context";
        }
    }
    ListView {
        padding-right: 0;
        padding-left: 0;

        for note[idx] in Notes.notes_model: HorizontalLayout {
            spacing: Style.spacing;
            padding-top: Style.spacing;

            CheckBox {
                width: 20px;
                checked: note.is_fixed;
                toggled => { Notes.toggle-fixed(note.id); }
            }
            LineEdit {
                width: 600px;
                text: note.text;
                accepted => { Notes.change-text(note.id, self.text); }
            }
            Rectangle {
                background: Style.input_background_color;
                border-radius: 2px;
                border-color: Style.popup_border_color;
                border-width: Style.border_width;

                HorizontalLayout {
                    Rectangle { width: 5px;}
                    Text {
                        horizontal-alignment: left;
                        vertical-alignment: center;
                        overflow: elide;
                        text: note.context;
                    }
                    Rectangle {
                        width: 25px;
                        Image {
                            vertical-alignment: center;
                            horizontal-alignment: center;
                            width: 20px;
                            height: self.width;
                            source: @image-url("../assets/icons/edit.svg");
                        }
                        TouchArea {
                            clicked => {debug("edit context!")}
                        }
                    }
                }
            }
        }
    }
}
