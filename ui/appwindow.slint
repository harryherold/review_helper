import { Button, VerticalBox , HorizontalBox, LineEdit, ListView, CheckBox, GroupBox, Palette, TabWidget } from "std-widgets.slint";

import { Style } from "style.slint";
import { NotesView } from "notes_view.slint";
import { FileDiffView } from "file_diff_view.slint";
import { Popup } from "popup.slint";
import { FileNotesPopup } from "file_notes_popup.slint";
import { Menu, MenuItem } from "menu.slint";
import { AppConfigPopup } from "app_config_popup.slint";
import { DiffConfigView } from "diff_config_view.slint";
import { OverallStatistics } from "overall_statistics.slint";

import { Repository, CommitPickerAdapter, OverallDiffStats, AppConfig, StringUtils, Diff, DiffFileItem, Notes, NoteItem, Project, FilePickerAdapter  } from "globals.slint";
import { SubSectionText } from "sub_section_text.slint";

export { AppConfig, FilePickerAdapter, CommitPickerAdapter, Notes, NoteItem, Diff, DiffFileItem, Repository, StringUtils, OverallDiffStats, Project }

export component AppWindow inherits Window {
    callback close;

    preferred-width: 1600px;
    preferred-height: 1200px;
    title: Project.path;

    notes-popup := FileNotesPopup {
        initial_x: (root.width / 2) - (self.width / 2);
        initial_y: (root.height / 2) - (self.height / 2);
        enable_close_button: true;
    }

    app-config-popup := AppConfigPopup {
        initial_x: (root.width / 2) - (self.width / 2);
        initial_y: (root.height / 2) - (self.height / 2);
    }

    VerticalLayout {
        menu-rect := Rectangle {
            height: 40px;

            HorizontalLayout {
                alignment: space-between;
                spacing: Style.size.spacing;

                HorizontalLayout {
                    spacing: Style.size.spacing;

                    Menu {
                        text: "File";

                        MenuItem {
                            text: "New";
                            clicked => {
                                Project.new()
                            }
                        }

                        MenuItem {
                            text: "Open";
                            clicked => {
                                Project.open()
                            }
                        }

                        MenuItem {
                            text: "Save";
                            enabled: Project.is_loaded && Project.has_modifications;
                            clicked => {
                                Project.save()
                            }
                        }

                        MenuItem {
                            text: "Close";
                            clicked => {
                                root.close()
                            }
                        }
                    }

                    Menu {
                        text: "Edit";

                        MenuItem {
                            text: "Config";
                            clicked => {
                                app-config-popup.open()
                            }
                        }
                    }
                }

                if Project.has_modifications: Rectangle {
                    width: Style.size.control_small_width;
                    border-radius: Style.size.border_radius;
                    border-width: Style.size.border_width;
                    states [
                        is_active when ta.has-hover: {
                            background: Palette.control-background;
                        }
                    ]
                    image := Image {
                        source: @image-url("../assets/icons/save.svg");
                        vertical-alignment: center;
                        horizontal-alignment: center;
                        colorize: Palette.foreground;

                        ta := TouchArea {
                            clicked => {
                                Project.save()
                            }
                        }
                    }
                }
            }
        }

        if Project.is_loaded: TabWidget {
            Tab {
                title: "File Diff";

                Rectangle {
                    background: Palette.control-background;

                    VerticalBox {
                        spacing: Style.size.spacing;
                        SubSectionText {
                            text: "Repository:";
                        }

                        DiffConfigView { }

                        SubSectionText {
                            visible: Repository.is_loaded;
                            text: "Statistics:";
                        }

                        if Repository.is_loaded: OverallStatistics { }

                        SubSectionText {
                            visible: Repository.is_loaded;
                            text: "Differences:";
                        }

                        if Repository.is_loaded: FileDiffView { }
                    }
                }
            }

            Tab {
                title: "Notes";

                NotesView { }
            }
        }
        if !Project.is_loaded: HorizontalBox {
            alignment: center;
            Image {
                source: @image-url("../assets/icons/warning.svg");
            }

            Text {
                vertical-alignment: center;
                text: "No project loaded";
                font-size: 18px;
            }
        }
    }
}
